plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.liquibase.gradle' version '2.2.0'
}

group = 'com.coinflip.dungeon'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
	targetCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.thymeleaf:thymeleaf:2.0.5'
	implementation 'io.jsonwebtoken:jjwt-orgjson:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	liquibaseRuntime 'org.liquibase:liquibase-core:4.24.0'
	liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.3'
	liquibaseRuntime 'info.picocli:picocli:4.7.5'
	liquibaseRuntime 'org.postgresql:postgresql'
}

tasks.named('test') {
	useJUnitPlatform()
}

liquibase {
	activities {
//		generateChangelog {
//			// Параметры подключения к базе данных
//			url 'jdbc:postgresql://localhost:5431/dml-local-db'
//			username 'user'
//			password 'password'
//			driver 'org.postgresql.Driver'
//
//			// Путь и имя файла, в который будет сохранен changelog
//			outputFile 'src/main/resources/db/changelog/generated-changelog.xml'
//		}
		main {
			File propsFile = new File("${project.rootDir}/src/main/resources/liquibase.properties")
			Properties properties = new Properties()
			properties.load(new FileInputStream(propsFile))
			changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
			url properties['url']
			username properties['username']
			password properties['password']
			driver properties['driver']
		}
	}
}